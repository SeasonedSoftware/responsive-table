{"version":3,"sources":["../../dist/responsive-table.esm.js","Example.js","App.js","basePath.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","err","_iterableToArrayLimit","TypeError","_nonIterableRest","responsive_table_esm_Cell","_ref","content","align","isObj","get_default","isPlainObject_default","text","react_default","a","createElement","TableCell","omit_default","responsive_table_esm_OurTable","data","_ref$scrollable","scrollable","_ref$tableProps","tableProps","firstSet","style","overflowX","width","Table","TableHead","TableRow","keys","map","title","index","concat","TableBody","row","map_default","cellValue","cellKey","responsive_table_esm_OurList","_ref$data","cardProps","Card","responsive_table_esm_ResponsiveTable","_ref$mobileTableProps","mobileTableProps","_ref$cardProps","_ref$mediaQuery","mediaQuery","useMediaQuery","Foo","Fizz","color","Hello","className","Example","Fragment","elevation","CardHeader","CardContent","href","rel","minWidth","prism","language","size","App","es","basepath","src_Example","path","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a14852c5.chunk.js","sourcesContent":["import React from 'react';\nimport map from 'lodash/map';\nimport { TableCell, Table, TableHead, TableRow, TableBody, Card, useMediaQuery } from '@material-ui/core';\nimport isPlainObject from 'lodash/isPlainObject';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar Cell = function Cell(_ref) {\n  var content = _ref.content,\n      align = _ref.align;\n  var isReact = get(content, '$$typeof');\n  var isObj = !isReact && isPlainObject(content);\n  var text = isObj ? get(content, 'content') : content;\n  return React.createElement(TableCell, _extends({\n    align: align\n  }, isObj ? omit(content, 'content') : {}), text);\n};\n\nvar OurTable = function OurTable(_ref) {\n  var data = _ref.data,\n      _ref$scrollable = _ref.scrollable,\n      scrollable = _ref$scrollable === void 0 ? true : _ref$scrollable,\n      _ref$tableProps = _ref.tableProps,\n      tableProps = _ref$tableProps === void 0 ? {} : _ref$tableProps;\n\n  var _data = _slicedToArray(data, 1),\n      firstSet = _data[0];\n\n  return React.createElement(\"div\", {\n    style: scrollable ? {\n      overflowX: 'auto',\n      width: '100%'\n    } : {}\n  }, React.createElement(Table, tableProps, React.createElement(TableHead, null, React.createElement(TableRow, null, Object.keys(firstSet).map(function (title, index) {\n    return React.createElement(TableCell, {\n      key: \"tableheader-\".concat(index)\n    }, title);\n  }))), React.createElement(TableBody, null, data.map(function (row, index) {\n    return React.createElement(TableRow, {\n      key: \"tablerow-\".concat(index)\n    }, map(row, function (cellValue, cellKey) {\n      return React.createElement(Cell, {\n        key: \"tablecell-\".concat(index, \"-\").concat(cellKey),\n        content: cellValue\n      });\n    }));\n  }))));\n};\n\nvar OurList = function OurList(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      cardProps = _ref.cardProps,\n      scrollable = _ref.scrollable,\n      _ref$tableProps = _ref.tableProps,\n      tableProps = _ref$tableProps === void 0 ? {} : _ref$tableProps;\n  return React.createElement(\"div\", null, data.map(function (row, index) {\n    return React.createElement(Card, _extends({}, cardProps, {\n      key: \"card-\".concat(index)\n    }), React.createElement(\"div\", {\n      style: scrollable ? {\n        overflowX: 'auto',\n        width: '100%'\n      } : {}\n    }, React.createElement(Table, tableProps, React.createElement(TableBody, null, map(row, function (cellValue, cellKey) {\n      return cellValue ? React.createElement(TableRow, {\n        key: \"tablecell-\".concat(index, \"-\").concat(cellKey)\n      }, React.createElement(TableCell, null, cellKey), React.createElement(Cell, {\n        align: \"right\",\n        content: cellValue\n      })) : null;\n    })))));\n  }));\n};\n\nvar ResponsiveTable = function ResponsiveTable(_ref) {\n  var data = _ref.data,\n      _ref$scrollable = _ref.scrollable,\n      scrollable = _ref$scrollable === void 0 ? false : _ref$scrollable,\n      _ref$tableProps = _ref.tableProps,\n      tableProps = _ref$tableProps === void 0 ? {} : _ref$tableProps,\n      _ref$mobileTableProps = _ref.mobileTableProps,\n      mobileTableProps = _ref$mobileTableProps === void 0 ? {} : _ref$mobileTableProps,\n      _ref$cardProps = _ref.cardProps,\n      cardProps = _ref$cardProps === void 0 ? {} : _ref$cardProps,\n      _ref$mediaQuery = _ref.mediaQuery,\n      mediaQuery = _ref$mediaQuery === void 0 ? '(min-width:600px)' : _ref$mediaQuery;\n  if (data.length < 1) return null;\n  var matches = useMediaQuery(mediaQuery);\n  return matches ? React.createElement(OurTable, {\n    data: data,\n    scrollable: scrollable,\n    tableProps: tableProps\n  }) : React.createElement(OurList, {\n    data: data,\n    scrollable: scrollable,\n    cardProps: cardProps,\n    tableProps: mobileTableProps\n  });\n};\n\nexport { ResponsiveTable };","import React from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism'\nimport { Card, CardHeader, CardContent } from '@material-ui/core'\n\nimport { ResponsiveTable } from '@seasonedsoftware/responsive-table'\n\nconst data = [\n  {\n    Foo: 'Bar',\n    Fizz: <span style={{ color: 'red' }}>Buzz</span>,\n    Hello: {\n      content: 'World',\n      style: { color: 'red' },\n    },\n  },\n  {\n    Foo: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s`,\n    Fizz: 'Fizz',\n    Hello: 'Hello',\n  },\n  {\n    Foo: {\n      content: 'Hakuna matata!',\n      className: 'special-one',\n      align: 'right',\n    },\n    Fizz: null,\n    Hello: {\n      content: <strong>Bar foo</strong>,\n      align: 'left',\n    },\n  },\n]\n\nconst Example = () => (\n  <React.Fragment>\n    <Card elevation={5}>\n      <CardHeader title=\"Scrollable\" />\n      <CardContent>\n        <p>\n          The <em>scrollable</em> prop will make both tables (desktop and\n          mobile) scroll when the width of the container is not enough for the\n          table content.\n        </p>\n        <p>\n          The <em>tableProps</em> will only affect the <em>desktop version</em>.\n          You can pass any prop that is acceptable by{' '}\n          <a\n            href=\"https://material-ui.com/api/table/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Table\n          </a>{' '}\n          component.\n        </p>\n        <ResponsiveTable\n          scrollable\n          data={data}\n          tableProps={{ style: { minWidth: 800 } }}\n        />\n      </CardContent>\n      <SyntaxHighlighter language=\"javascript\" style={prism}>\n        {`\nimport { ResponsiveTable } from '@seasonedsoftware/responsive-table'\n\n// MyComponent\n<ResponsiveTable\n  scrollable\n  data={data} // see last sample\n  tableProps={{ style: { minWidth: 800 } }}\n/>`}\n      </SyntaxHighlighter>\n    </Card>\n    <Card elevation={5}>\n      <CardHeader title=\"Change mobile Props\" />\n      <CardContent>\n        <p>\n          The <em>mobileTableProps</em> and <em>cardProps</em> are only used on\n          the mobile version of the table. You can pass any prop that is\n          acceptable by{' '}\n          <a\n            href=\"https://material-ui.com/api/table/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Table\n          </a>{' '}\n          and{' '}\n          <a\n            href=\"https://material-ui.com/api/card/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Card\n          </a>{' '}\n          respectively.\n        </p>\n        <ResponsiveTable\n          data={data}\n          mobileTableProps={{ size: 'small' }}\n          cardProps={{ elevation: 10 }}\n        />\n      </CardContent>\n      <SyntaxHighlighter language=\"javascript\" style={prism}>\n        {`\nimport { ResponsiveTable } from '@seasonedsoftware/responsive-table'\n\n// MyComponent\n<ResponsiveTable\n  data={data} // see last sample\n  mobileTableProps={{ size: 'small' }}\n  cardProps={{ elevation: 10 }}\n/>`}\n      </SyntaxHighlighter>\n    </Card>\n    <Card elevation={5}>\n      <CardHeader title=\"Change the breakpoint\" />\n      <CardContent>\n        <p>\n          You can pass a <em>mediaQuery</em> prop with a media query string. If\n          it matches, then the table is shown.\n        </p>\n        <ResponsiveTable data={data} mediaQuery=\"(min-width:890px)\" />\n      </CardContent>\n      <SyntaxHighlighter language=\"javascript\" style={prism}>\n        {`\nimport { ResponsiveTable } from '@seasonedsoftware/responsive-table'\n\n// MyComponent\n<ResponsiveTable\n  data={data} // see last sample\n  mediaQuery=\"(min-width:890px)\" // default: (min-width:600px)\n/>`}\n      </SyntaxHighlighter>\n    </Card>\n    <Card elevation={5}>\n      <CardHeader title=\"The Data for these samples\" />\n      <CardContent>\n        <p>\n          The <em>data</em> prop should be an array with objects. The object\n          keys of the first array should be what you want as the table header.\n        </p>\n        <p>\n          For the values, you can pass either a string, a react element, or\n          another object which should have a content key. Any other key will be\n          passed to the TableCell as props.\n        </p>\n        <p>\n          <em>Null</em> values will be hidden in the mobile version.\n        </p>\n      </CardContent>\n      <SyntaxHighlighter language=\"javascript\" style={prism}>\n        {`\nconst data = [\n  {\n    Foo: 'Bar',\n    Fizz: <span style={{ color: 'red' }}>Buzz</span>,\n    Hello: {\n      content: 'World',\n      style: { color: 'red' },\n    },\n  },\n  {\n    Foo: \\`Lorem Ipsum is simply dummy text of\n    the printing and typesetting industry.\n    Lorem Ipsum has been the industry's standard\n    dummy text ever since the 1500s\\`,\n    Fizz: 'Fizz',\n    Hello: 'Hello',\n  },\n  {\n    Foo: {\n      content: 'Hakuna matata!',\n      className: 'special-one',\n      align: 'right',\n    },\n    Fizz: null,\n    Hello: {\n      content: <strong>Bar foo</strong>,\n      align: 'left',\n    },\n  },\n]`}\n      </SyntaxHighlighter>\n    </Card>\n  </React.Fragment>\n)\n\nexport default Example\n","import React from 'react'\nimport { Router } from '@reach/router'\nimport basePath from './basePath'\nimport Example from './Example'\n\nimport './App.css'\n\nconst App = () => (\n  <div className=\"App\">\n    <Router basepath={basePath}>\n      <Example path=\"/\" />\n    </Router>\n  </div>\n)\n\nexport default App\n","const isDev = process.env.NODE_ENV === 'development'\n\nexport default (isDev ? '' : '/responsive-table')\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}